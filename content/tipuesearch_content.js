var tipuesearch = {"pages": [{'title': 'Team member', 'text': 'group 4  Repository:  40423155  | Site:  40423155 Repository:  40723101  | Site:  40723101 Repository:  40723102  | Site:  40723102 Repository:  40723106  | Site:  40723106 Repository:  40723111  | Site:  40723111 Repository:  40723119  | Site:  40723119 Repository:  40723121  | Site:  40723121 Repository:  40723124  | Site:  40723124 Repository:  40723134  | Site:  40723134 Repository:  40723135  | Site:  40723135 Repository:  40723136  | Site:  40723136 Repository:  40723138  | Site:  40723138   (group leader) \n 分組倉儲: https://github.com/s40723138/cd2020ag4 \n', 'tags': '', 'url': 'Team member.html'}, {'title': '直播會議記錄', 'text': '第一次會議記錄  W2 \n \n \n 第二次會議紀錄  W4 \n \n 第三次會議紀錄\xa0 W6 \n \n', 'tags': '', 'url': '直播會議記錄.html'}, {'title': 'W7隨機直播', 'text': '\n 40723102 \n 直播網址: \n 4 0723135 \n 直播網址: \n 40723136 \n 直播網址: \n 40723138 \n 直播網址:', 'tags': '', 'url': 'W7隨機直播.html'}, {'title': '作業一', 'text': '可移植編程系統創建(Portable system) \n 四輪機器人(CoppeliaSim) \n 亂數分組(Random grouping) \n', 'tags': '', 'url': '作業一.html'}, {'title': '可移植編程系統創建', 'text': '40723111 李其叡\xa0 (leader) \n 40723138 黃奕慶 \n 40723121 邱博義 \n 40723101 沈易萱 \n', 'tags': '', 'url': '可移植編程系統創建.html'}, {'title': 'Python382', 'text': 'creat by 40723111 \n 將python 3.7.3更新至3.8.2 \n 1. https://www.python.org/downloads/windows/ 在這個網站上下載 \n Windows x86-64 executable installer 安裝至自己可攜系統(把pip的選項去掉)。 \n \n 2.使用批次檔更改開始路徑，使用 Scite.exe 編輯器將原本的py373更改成新的3.8.2版本的路徑 \n \n \n \n \n \n \n 1 \n 2 \n 3 \n 4 \n 5 \n 6 \n 7 \n 8 \n 9 \n 10 \n 11 \n 12 \n 13 \n 14 \n 15 \n 16 \n 17 \n 18 \n 19 \n 20 \n 21 \n 22 \n 23 \n 24 \n 25 \n 26 \n 27 \n 28 \n 29 \n 30 \n 31 \n 32 \n 33 \n 34 \n 35 \n 36 \n 37 \n 38 \n 39 \n \n \n \n @echo off \n set Disk=y \n subst %Disk%: "data" \n \xa0 \n %Disk%: \n \xa0 \n set HomePath=%Disk%:\\home_mdecourse \n set HomeDrive=%Disk%:\\home_mdecourse \n set Home=%Disk%:\\home_mdecourse \n set USERPROFILE=%Disk%:\\home_mdecourse \n \xa0 \n REM 將系統 Python 程式的 io 設為 utf-8 \n set PYTHONIOENCODING="utf-8" \n \xa0 \n set PYTHONPATH=%Disk%:\\py382\\DLLs;%Disk%:\\py382\\Lib;%Disk%:\\py382\\Lib\\site-packages; \n set PYTHONHOME=%Disk%:\\py382 \n \xa0 \n set path_python=%Disk%:\\py382;%Disk%:\\py382\\Scripts; \n set path_msys2=%Disk%:\\msys64\\mingw64\\bin; \n REM coreutils is for compiling fossil scm \n set path_coreutils=%Disk%:\\coreutils-5.3.0\\bin;%Disk%:\\depends22_x64; \n set path_tcc=%Disk%:\\tcc; \n set path_cmake=%Disk%:\\cmake-3.10.1-win64-x64\\bin; \n set path_nodejs=Disk%:\\nodejs;%Disk%:\\nodejs\\appdata\\roaming\\npm; \n set path_git=%Disk%:\\portablegit\\bin; \n set path_xming=%Disk%:\\Xming; \n set path_latex=%%Disk%:\\Pandoc;%Disk%:\\TinyTeX\\bin\\win32; \n \xa0 \n path=%Disk%:;%path_python%;%path_msys2%;%path_tcc%;%path_git%;%path_cmake%;%path_coreutils%; \n \xa0 \n start /MIN cmd.exe \n start /MIN cmd.exe \n start /MIN cmd.exe \n start /MIN cmd.exe \n \xa0 \n start /MIN %Disk%:\\wscite415\\wscite\\SciTE.exe \n start /MIN %Disk%:\\wscite415\\wscite\\SciTE.exe \n \xa0 \n Exit \n \n \n \n \n \n \n \n 3.執行get-pip.py (取得安裝管理工具) \n \n 4.執行pip install指令將 \n Flask \n Markdown \n lxml \n bs4 \n flask_cors \n pelican \n leo \n 這些3.8.2版本缺少的模組依序安裝下來。 \n \n', 'tags': '', 'url': 'Python382.html'}, {'title': '四輪機器人', 'text': 'CoppeliaSim簡介 \n 具有集成開發環境的機器人模擬器 CoppeliaSim 基於分佈式控制體系結構：可以通過嵌入式腳本，插件， ROS 節點， BlueZero 節點，遠程 API 客戶端或自定義解決方案分別控制每個對象 / 模型。這使 CoppeliaSim 非常通用，非常適合多機器人應用。控制器可以用 C / C ++ ， Python ， Java ， Lua ， Matlab ， Octave 或 Urbi 編寫。 \n CoppeliaSim應用程序列表 \n 1.工廠自動化系統仿真 \n 2.遠程監控 \n 3.硬件控制 \n 4.快速原型製作和驗證 \n 5.安全監控 \n 6.快速算法開發 \n 7.機器人相關教育 \n 產品介紹 \n CoppeliaSim可以用作獨立應用程序，也可以輕鬆地嵌入到主客戶端應用程序中：它的佔用空間小且精心設計的 API 使 CoppeliaSim 成為嵌入更高級別應用程序的理想選擇。集成的 Lua 腳本解釋器使 CoppeliaSim 成為了一種極其通用的應用程序，使用戶可以自由組合低級 / 高級功能以獲得新的高級功能。 \xa0 \n', 'tags': '', 'url': '四輪機器人.html'}, {'title': '小組名單', 'text': '40723124 徐敬倫 \n 40723134 陳漢宇 \n 40723119 林哲緯 \n 40723102 林昱秀 \n 四輪機器人參考網站 \n https://cyberbotics.com/doc/guide/index \n', 'tags': '', 'url': '小組名單.html'}, {'title': 'webots安裝-1', 'text': '下載位置: Webots_2019b_rev1.7z \n 1.新增啟動器 \n \n \n 2. 執行路徑設定 \n set path_webots=%Disk%:\\Webots_2019b_rev1\\msys64\\mingw64\\bin;%Disk%:\\Webots_2019b_rev1\\msys64\\usr\\bin \n %path_webots%; \n \n \n 3.設定抓取的檔案 \n start webots.exe%*\n \n \n 4.將檔案丟入啟動器底下 \n \n', 'tags': '', 'url': 'webots安裝-1.html'}, {'title': '亂數分組', 'text': '\xa040423155蘇麒彬 \n 40723135 陳藝晉 \n 40723136 彭少鍚 \n 40723106 王昱翔 \n', 'tags': '', 'url': '亂數分組.html'}, {'title': '作業二', 'text': "1.\xa0According to the material of Topic 0 and Topic 1, can you describe specifically what the mechanical design team need to do for accomplishing Assignment 1's\xa0 four wheeled robot. \n EBook: \n DigitalProductCollaboration.pdf \n 工業與工程產品設計協作.pdf \n MechanicalDesignProcess.pdf \n 2. What do you need to know from\xa0 https://cyberbotics.com/doc/guide/index \xa0 \xa0to implement a four-wheeled robot? \n", 'tags': '', 'url': '作業二.html'}, {'title': '分組1', 'text': '參考內容 \n 40423155 蘇麒彬  \n 40723101 沈易萱  \n 40723106 王昱翔  \n 40723121 邱博義  \n 40723134 陳漢宇  \n 40723135 陳藝晉 \n', 'tags': '', 'url': '分組1.html'}, {'title': '40423155', 'text': '', 'tags': '', 'url': '40423155.html'}, {'title': '40723101', 'text': '', 'tags': '', 'url': '40723101.html'}, {'title': '40723106', 'text': '', 'tags': '', 'url': '40723106.html'}, {'title': '40723121', 'text': '', 'tags': '', 'url': '40723121.html'}, {'title': '40723134', 'text': '', 'tags': '', 'url': '40723134.html'}, {'title': '40723135', 'text': '', 'tags': '', 'url': '40723135.html'}, {'title': '分組2', 'text': '參考內容 \n 40723102 林昱秀  \n 40723111 李其叡 \n  40723119 林哲緯  \n 40723124 徐敬倫 \n  40723136 彭少鍚  \n 40723138 黃奕慶 \n', 'tags': '', 'url': '分組2.html'}, {'title': 'webots安裝-2', 'text': '\n 下載位置: Webots_2019b_rev1.7z \n 1.新增啟動器 \n \n \n 2. 執行路徑設定 \n set path_webots=%Disk%:\\Webots_2019b_rev1\\msys64\\mingw64\\bin;%Disk%:\\Webots_2019b_rev1\\msys64\\usr\\bin \n %path_webots%; \n \n \n 3.設定抓取的檔案 \n start webots.exe%*\n \n \n 4.將檔案丟入啟動器底下 \n \n', 'tags': '', 'url': 'webots安裝-2.html'}, {'title': '關於webots', 'text': '什麼是Webots？ \n Webots是專業的移動機器人仿真軟件包。 它提供了快速的原型製作環境，使用戶可以創建具有物理特性（例如質量，關節，摩擦係數等）的3D虛擬世界。用戶可以添加簡單的被動對像或稱為移動機器人的主動對象。 這些機器人可以具有不同的移動方案（輪式機器人，有腿機器人或飛行機器人）。 而且，它們可能配備有許多傳感器和執行器設備，例如距離傳感器，驅動輪，攝像機，馬達，觸摸傳感器，發射器，接收器等。最後，用戶可以對每個機器人進行單獨編程，以表現出所需的行為。 Webots包含大量機器人模型和控制器程序示例，以幫助用戶入門。 \n Webots還包含許多與真實移動機器人的接口，因此，一旦您模擬的機器人表現出預期的行為，您就可以將其控製程序轉移到諸如e-puck，DARwIn-OP，Nao等真實機器人上。可以添加新接口通過相關係統。 \n', 'tags': '', 'url': '關於webots.html'}, {'title': '40723111', 'text': 'Camera Sensors \n \xa0Author:40723111 \n 對於大多數應用程序而言，添加通用的 Camera 節點就足夠了。通用相機是可自定義的（分辨率，視野，噪點等），默認情況下包括變焦和聚焦機制。提供特殊效果，例如運動模糊，各種噪聲模型，鏡頭畸變和使用球形投影。 除了添加通用的 Camera 節點外，Webot中還提供了一些預定義的Camera模型。 \n Smart Camera \n 如果將識別 節點添加到相機，則相機不僅可以返回圖像，而且還可以返回相機圖像中檢測到的所有對象及其大小和位置。因此，模擬諸如Mobileye之類的智能相機非常容易。 \n \n \n MultiSense S21 \n \n \n 它 MultiSense S21 是基於立體相機的距離傳感器。 \n 我們的傳感器模型包括多個Webots設備。 \n IntertialUnit 存在 內部 設備以獲取設備的側傾，俯仰和偏航角。 可以使用Webots \xa0 相機 獨立檢索立體相機的左右RGB圖像 。 或者， 可以在 設備 中央啟用 RGB \xa0 相機 和 RangeFinder MultiSense S21 設備。 存在這兩個“元”設備以模仿由真實設備生成的3D彩色點的雲。 \n 可以 MultiSenseS21.name 使用 下表 從該 字段 計算用於從控制器檢索設備的內部設備名稱 ： \n \n \n \n \n \xa0 \n \xa0 \xa0 \xa0 \xa0\xa0 \n \n \n \n \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 MultiSenseS21 stereoscopic camera \n \n \n \n \n 該 name 字段定義 MultiSenseS21 名稱，並用於計算內部設備名稱 。 \n 該 cameraWidth 和 cameraHeight 字段指定所有內部渲染設備（即分辨率 相機 和 測距儀 ）。 \n 該 cameraFieldOfView 字段指定所有內部渲染設備的水平視場。 \n 該 cameraNoise 字段指定所有內部渲染設備的噪聲（參見 Camera.noise ）。 \n 該 rangeFinderNoise 字段指定內部meta RangeFinder的噪聲（參見 RangeFinder.noise ）。 \n 該 rangeFinderMaxRange 字段指定內部meta RangeFinder的最大範圍（參見 RangeFinder.maxRange ）。 \n 的 leftCamera ， rightCamera ， metaCamera 和 metaRangeFinder 字段允許以使相應的內部再現設備。 \n 該 enablePhysics 字段指定傳感器是否應受物理影響（質量= 1.5 [kg]）。 \n \n \n \n \n DistanceSensor Sensors \n 距離傳感器\xa0 \xa0 Author:40723111 \n 對於大多數應用程序而言，添加通用的 DistanceSensor 節點就足夠了，因為它們是可自定義的（分辨率，lookupTable，光圈等）。 \n 此外，Webot中提供了一些預定義的商業化模型，例如某些紅外傳感器。 \n Index \n \n Sharp \n \n Sharp GP2D120 \n Sharp GP2Y0A02YK0F \n Sharp GP2Y0A41SK0F \n Sharp GP2Y0A710K0F \n \n \n \n Sharp \n Sharp GP2D120 \n \n Sharp GP2D120 \n Sharp GP2D120 是具有集成的信號處理和模擬電壓輸出的距離測量傳感器。該設備輸出與檢測距離相對應的電壓。 \n 該型號具有以下規格： \n \n effective range：4至30 [cm] \n output type：模擬 \n response time：39 [ms] \n start up delay：44 [毫秒] \n average consumption：33 [毫安] \n \n \n \n DistanceSensor 的lookupTable字段已根據 數據表中 的特性實現。 \n 該wb_distance_sensor_get_value函數返回測量的電壓/強度。要轉換這些值，請使用以下公式： \n \n 將米轉換為電壓：y(x) = 0.5131*x^(-0.5735)-0.6143 \n 將電壓轉換為米：y(x) = 0.1594*x^(-0.8533)-0.02916 \n \n Sharp GP2Y0A02YK0F \n \n Sharp GP2Y0A02YK0F \n Sharp GP2Y0A02YK0F 是一個距離測量傳感器單元，PSD（位置敏感檢測器）中，一個集成的組合構成的IR-LED（紅外線發光二極管）和信號處理電路。由於採用三角測量法，物體的反射率，環境溫度和工作持續時間的變化不容易影響距離檢測。該設備輸出與檢測距離相對應的電壓。因此，該傳感器也可以用作接近傳感器。 \n 該型號具有以下規格： \n \n effective range：20至150 [cm] \n output type：模擬 \n response time：33 [ms] \n start up delay：50 [ms] \n average consumption：33 [毫安] \n \n \n DistanceSensor 的lookupTable字段已根據 數據表中 的特性實現。 \n 該wb_distance_sensor_get_value函數返回測量的電壓/強度。要轉換這些值，請使用以下公式： \n \n 將米轉換為電壓：y(x) = 1.784*x^(-0.4215)-1.11 \n 將電壓轉換為米：y(x) = 0.7611*x^(-0.9313)-0.1252 \n \n Sharp GP2Y0A41SK0F \n \n Sharp GP2Y0A41SK0F \n Sharp GP2Y0A41SK0F 是一個距離測量傳感器單元，PSD（位置敏感檢測器）中，一個集成的組合構成的IR-LED（紅外線發光二極管）和信號處理電路。由於採用三角測量法，物體的反射率，環境溫度和工作持續時間的變化不容易影響距離檢測。該設備輸出與檢測距離相對應的電壓。因此，該傳感器也可以用作接近傳感器。 \n 該型號具有以下規格： \n \n effective range：4至30 [cm] \n output type：模擬 \n response time：5 [ms] \n start up delay：26 [ms] \n average consumption：12 [mA] \n \n \n DistanceSensor 的lookupTable字段已根據 數據表中 的特性實現。 \n 該wb_distance_sensor_get_value函數返回測量的電壓/強度。要轉換這些值，請使用以下公式： \n \n 將米轉換為電壓：y(x) = 0.5131*x^(-0.5735)-0.6143 \n 將電壓轉換為米：y(x) = 0.1594*x^(-0.8533)-0.02916 \n \n Sharp GP2Y0A710K0F \n \n GP2Y0A710K0F \n Sharp GP2Y0A710K0F 是一個距離測量傳感器單元，PSD（位置敏感檢測器）中，一個集成的組合構成的IR-LED（紅外線發光二極管）和信號處理電路。由於採用三角測量法，物體的反射率，環境溫度和工作持續時間的變化不容易影響距離檢測。該設備輸出與檢測距離相對應的電壓。因此，該傳感器也可以用作接近傳感器。 \n 該型號具有以下規格： \n \n effective range：100至550 [cm] \n output type：模擬 \n response time：21 [ms] \n start up delay：26 [ms] \n average consumption：30 [毫安] \n \n \n DistanceSensor 的lookupTable字段已根據 數據表中 的特性實現。 \n 該wb_distance_sensor_get_value函數返回測量的電壓/強度。要轉換這些值，請使用以下公式： \n \n 將米轉換為電壓：y(x) = 1.962*x^(-0.5214)+0.4926 \n 將電壓轉換為米：y(x) = 20.24*x^(-4.76)+0.6632 \n \n', 'tags': '', 'url': '40723111.html'}, {'title': '40723119', 'text': 'Lidar Sensors \n', 'tags': '', 'url': '40723119.html'}, {'title': '40723124', 'text': 'Radar Sensors \n', 'tags': '', 'url': '40723124.html'}, {'title': '40723102', 'text': 'RangeFinder Sensors \n', 'tags': '', 'url': '40723102.html'}, {'title': '40723138', 'text': 'Connector \n Display \n Emitter \n', 'tags': '', 'url': '40723138.html'}, {'title': '40723136', 'text': 'LinearMotor \n Muscle \n LED \n', 'tags': '', 'url': '40723136.html'}, {'title': 'About', 'text': '此內容管理系統以\xa0 https://github.com/mdecourse/cmsimde \xa0作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作. \n 利用 cmsimde 建立靜態網誌方法: \n 1. 在 github 建立倉儲, git clone 到近端 \n 2. 參考\xa0 https://github.com/mdecourse/newcms , 加入除了 cmsimde 目錄外的所有內容 \n 以 git submodule add\xa0 https://github.com/mdecourse/cmsimde \xa0cmsimde \n 建立 cmsimde 目錄, 並從 github 取下子模組內容. \n 3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器. \n 動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端. \n 4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行: \n git clone --recurse-submodules  https://github.com/mdecourse/newcms.git \n', 'tags': '', 'url': 'About.html'}, {'title': 'Q&A', 'text': '', 'tags': '', 'url': 'Q&A.html'}]};